openapi: "3.0.0"
info:
  version: 1.0.0
  title: Mongo Training Backend
  description: Population and Immigration Authority backend service used for Yael Google Apigee POC
  contact:
    name: Yael Software (Apigee)
    email: mosheg@yaelsoft.com
    url: https://yaelsoft.co.il
  license:
    name: private
    url: https://yaelsoft.co.il
servers:
  - url: "https://data.mongodb-api.com/app/fdb-app-cvjct/endpoint/data/v1/action"
    description: Mongodb backend
tags:
  - name: citizens
    description: Citizens of Israel
paths:
  /findOne:
    post:
      tags:
        - findOne
      summary: Get a citizen details
      operationId: getCitizenById 
      requestBody:
        description: citizen id
        content: 
          'application/json':
            schema:
              $ref: "#/components/schemas/FindOne"
      responses:
        '200':
          description: Selected citizen
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Citizens"
        '404':
          description: Citizen not found
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - api_key: []
      parameters:
        - name: citizenId
          in: path
          description: ID of citizen to use
          required: true
          schema:
            $ref: "#/components/schemas/Citizen/properties/IdNumber"
          style: simple
      x-codegen-request-body-name: body
components:
  securitySchemes:
    basicAuth:
      type: http
      description: basic auth
      scheme: basic

  schemas:
    Citizen:
      type: object
      description: citizen details
      required:
        - IdNumber
        # - IdCardExpireDat
        # - FirstName
        # - LastName
        # - Birthday
        # - CityName
        # - StreetName
        # - ZipCode7
      properties:
        IdNumber:
          description: integer id (used for access)
          type: integer
          format: int32
          minimum: 0
        IdCardExpireDate:
          description: id card expire date
          type: string
          format: date
        FirstName:
          description: citizen's first name
          type: string
        LastName:
          description: citizen's last name
          type: string
        Birthdate:
          description: citizen's birthday
          type: string
          format: date
        CityName:
          description: the city which the citizen register in
          type: string
        StreetName:
          description: the street of the citizen
          type: string
        ZipCode7:
          description: citizen's zipcode (7)
          type: integer
          format: int32
    Citizens:
      type: array
      description: array of citizens
      items:
        $ref: "#/components/schemas/Citizen"
    FindOne:
      properties:
        dataSource:
          description: The name of the cluster
          type: string
          value: mongodb-atlas
        database:
          description: The name of the database
          type: string
          value: test
        collection:
          description: The name of the collection
          type: string
          value: users
        filter:
          description: Filter by
          type: array
          items:
            - filterBy:
              type: string
              value: IdNumber
            - id:
              $ref: "#/components/schemas/parameters/idParam"
    Error:
      type: object
      description: error response
      required:
        - error
        - error_description
      properties:
        error:
          type: string
        error_description:
          type: string
    parameters:
      idParam:
        name: id
        in: query
        description: Citizen's id
        required: true
        schema:
          $ref: "#/components/schemas/Citizen/properties/IdNumber"
        
